package visao;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.print.DocFlavor;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import static javax.swing.UIManager.getSystemLookAndFeelClassName;
import javax.swing.UnsupportedLookAndFeelException;
import modelo.*;

/**
 *
 * @author yosh
 */
public class TelaUno extends javax.swing.JFrame {

    /**
     * Creates new form TelaUno
     */
    private DefaultListModel listaEsquerdo, listaDireito;
    private Baralho baralho;
    private Jogador jogador;
    private JogadorIA computador;
    private Mesa mesa;

    public TelaUno() throws IOException {
        initComponents();

        //Inicialização das classes que tornam possível a adição na lista
        listCartasEsquerdo.setModel(new DefaultListModel());
        listCartasDireito.setModel(new DefaultListModel());
        listaDireito = (DefaultListModel) listCartasDireito.getModel();
        listaEsquerdo = (DefaultListModel) listCartasEsquerdo.getModel();

        //Inicializando variáveis
        baralho = new Baralho();
        mesa = new Mesa(baralho);
        jogador = new Jogador(JOptionPane.showInputDialog("Digite seu nome"), mesa);
        lblNomeJogador.setText(jogador.getNome());
        computador = new JogadorIA("Computador", mesa);

        //Criando novo jogo
        mesa.iniciarNovoJogo(jogador, computador);
        //Preenchendo listas
        for (Carta x : jogador.getMao()) {
            listaDireito.addElement(exibirCarta(x));
        }
        for (int i = 1; i <= computador.getMao().size(); i++) {
            listaEsquerdo.addElement("Carta " + i);
        }

        //Carregando as imagens
        ImageIcon iconeBaralho = new ImageIcon(getClass().getResource("/imagens/verso.png"));
        imgCortada.setText("");

        imagemBaralho.setIcon(ajustarImagem(iconeBaralho));
        imagemMonte.setIcon(ajustarImagem(mesa.verTopoMonte().getImagem()));
        imagemBaralho.setText("");
        imagemMonte.setText("");

        btnJogarCartaDireito.setEnabled(false);
        btnUnoDireito.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spCartas = new javax.swing.JScrollPane();
        listCartasEsquerdo = new javax.swing.JList<>();
        lblCartas = new javax.swing.JLabel();
        btnJogarCartaEsquerdo = new javax.swing.JButton();
        btnUnoEsquerdo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        spCartas1 = new javax.swing.JScrollPane();
        listCartasDireito = new javax.swing.JList<>();
        lblNomeJogador = new javax.swing.JLabel();
        btnJogarCartaDireito = new javax.swing.JButton();
        btnUnoDireito = new javax.swing.JButton();
        imagemBaralho = new javax.swing.JLabel();
        imagemMonte = new javax.swing.JLabel();
        imgCortada = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listCartasEsquerdo.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listCartasEsquerdo.setEnabled(false);
        listCartasEsquerdo.setFocusable(false);
        spCartas.setViewportView(listCartasEsquerdo);

        lblCartas.setText("Computador");

        btnJogarCartaEsquerdo.setText("Jogar Carta");
        btnJogarCartaEsquerdo.setEnabled(false);

        btnUnoEsquerdo.setText("UNO!");
        btnUnoEsquerdo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(lblCartas)
                .addContainerGap(82, Short.MAX_VALUE))
            .addComponent(spCartas)
            .addComponent(btnJogarCartaEsquerdo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnUnoEsquerdo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblCartas)
                .addGap(6, 6, 6)
                .addComponent(spCartas, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnJogarCartaEsquerdo)
                .addGap(43, 43, 43)
                .addComponent(btnUnoEsquerdo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        listCartasDireito.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listCartasDireito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCartasDireitoMouseClicked(evt);
            }
        });
        spCartas1.setViewportView(listCartasDireito);

        lblNomeJogador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNomeJogador.setText("Nome Jogador");

        btnJogarCartaDireito.setText("Jogar Carta");
        btnJogarCartaDireito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnJogarCartaDireitoMouseReleased(evt);
            }
        });
        btnJogarCartaDireito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJogarCartaDireitoActionPerformed(evt);
            }
        });

        btnUnoDireito.setText("UNO!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spCartas1)
            .addComponent(btnJogarCartaDireito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnUnoDireito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblNomeJogador, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblNomeJogador)
                .addGap(6, 6, 6)
                .addComponent(spCartas1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnJogarCartaDireito)
                .addGap(43, 43, 43)
                .addComponent(btnUnoDireito)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 12, -1, -1));

        imagemBaralho.setText("imagemBaralho");
        imagemBaralho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imagemBaralhoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imagemBaralhoMouseEntered(evt);
            }
        });
        getContentPane().add(imagemBaralho, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, -1, 170));

        imagemMonte.setText("imagemMonte");
        imagemMonte.setMaximumSize(new java.awt.Dimension(80, 130));
        imagemMonte.setMinimumSize(new java.awt.Dimension(80, 130));
        imagemMonte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imagemMonteMouseEntered(evt);
            }
        });
        getContentPane().add(imagemMonte, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, 150));

        imgCortada.setText("imgCortada");
        getContentPane().add(imgCortada, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnJogarCartaDireitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJogarCartaDireitoActionPerformed
        /*
        *   Verificar carta selecionada
        *   Verificar se ela pode ser jogada
        *   Jogar a carta
        *   Tirar a carta da lista/mão do jogador
         */
        //---- Joga
        mesa.colocaNoTopoMonte(jogador.jogarCarta(listCartasDireito.getSelectedIndex()));

        //----
        //-----Remove a carta da lista e atualiza a imagem do monte
        listaDireito.remove(listCartasDireito.getSelectedIndex());
        imagemMonte.setIcon(ajustarImagem(mesa.verTopoMonte().getImagem()));
        imgCortada.setIcon(ajustarImagem(mesa.getMonteCarta().get(mesa.getMonteCarta().size() - 2).getImagem()));

        //-----
        turnoComputador();
        //Caso o computador jogue varios bloqueios, voltas ou +2 seguidos é necessário um loop até que seja possivel
        //o jogador jogar
        while ((mesa.verTopoMonte() instanceof CartaSimbolo) && ((CartaSimbolo) mesa.verTopoMonte()).getEfeito() == 1) {
            if (((CartaSimbolo) mesa.verTopoMonte()).getSimbolo().equals("+2")) { //Se a carta for um +2
                jogador.comprarCarta();
                listaDireito.addElement(exibirCarta(jogador.getMao().get(jogador.getMao().size() - 1)));
                jogador.comprarCarta();
                listaDireito.addElement(exibirCarta(jogador.getMao().get(jogador.getMao().size() - 1)));
                ((CartaSimbolo) mesa.verTopoMonte()).setEfeito(0);
                //Apois o jogador comprar 2 cartas, a carta perde o efeito e o computador joga novamente
                turnoComputador();

            } else { //Se for um bloqueio/volta a carta perde o efeito e o computador joga novamente
                ((CartaSimbolo) mesa.verTopoMonte()).setEfeito(0);
                turnoComputador();

            }
        }
        btnJogarCartaDireito.setEnabled(false);
    }//GEN-LAST:event_btnJogarCartaDireitoActionPerformed

    private void imagemBaralhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagemBaralhoMouseClicked
        jogador.comprarCarta();
        listaDireito.addElement(exibirCarta(jogador.getMao().get(jogador.getMao().size() - 1)));

        computador.realizarJogada(mesa.verTopoMonte());
        imagemMonte.setIcon(ajustarImagem(mesa.verTopoMonte().getImagem()));
        try {
            imgCortada.setIcon(ajustarImagem(mesa.getMonteCarta().get(mesa.getMonteCarta().size() - 2).getImagem()));
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        listaEsquerdo.clear();
        for (int i = 1; i <= computador.getMao().size(); i++) {
            listaEsquerdo.addElement("Carta " + i);
        }

        while ((mesa.verTopoMonte() instanceof CartaSimbolo) && ((CartaSimbolo) mesa.verTopoMonte()).getEfeito() == 1) {
            if (((CartaSimbolo) mesa.verTopoMonte()).getSimbolo().equals("+2")) {
                jogador.comprarCarta();
                listaDireito.addElement(exibirCarta(jogador.getMao().get(jogador.getMao().size() - 1)));
                jogador.comprarCarta();
                listaDireito.addElement(exibirCarta(jogador.getMao().get(jogador.getMao().size() - 1)));
                ((CartaSimbolo) mesa.verTopoMonte()).setEfeito(0);
                
                
                turnoComputador();
                
                
            } else {
                ((CartaSimbolo) mesa.verTopoMonte()).setEfeito(0);
                turnoComputador();
                
            }
        }

    }//GEN-LAST:event_imagemBaralhoMouseClicked

    private void imagemBaralhoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagemBaralhoMouseEntered
        imagemBaralho.setToolTipText(Integer.toString(mesa.getBaralho().getCartas().size()));
    }//GEN-LAST:event_imagemBaralhoMouseEntered

    private void listCartasDireitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCartasDireitoMouseClicked
        //Se a carta selecionada puder ser jogada o botão é habilitado
        if (mesa.validarJogada(jogador.getMao().get(listCartasDireito.getSelectedIndex()), mesa.verTopoMonte())) {
            btnJogarCartaDireito.setEnabled(true);
        } else {
            btnJogarCartaDireito.setEnabled(false);
        }
    }//GEN-LAST:event_listCartasDireitoMouseClicked

    private void btnJogarCartaDireitoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnJogarCartaDireitoMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnJogarCartaDireitoMouseReleased

    private void imagemMonteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagemMonteMouseEntered
        if (mesa.verTopoMonte() instanceof CartaSimbolo) {
            if (((CartaSimbolo) mesa.verTopoMonte()).getEfeito() == 1) {
                imagemMonte.setToolTipText("Efeito ativo");
            } else {
                imagemMonte.setToolTipText("Efeito inativo");
            }
        }
    }//GEN-LAST:event_imagemMonteMouseEntered

    private String exibirCarta(Carta x) {	//Função que exibe as informaçães da carta
        if (x instanceof CartaNumero) {
            CartaNumero k = (CartaNumero) x;
            return k.getNumero() + " " + k.getCor();
        } else if (x instanceof CartaSimbolo) {
            CartaSimbolo k = (CartaSimbolo) x;
            return k.getSimbolo() + " " + k.getCor();
        } else {
            CartaEspecial k = (CartaEspecial) x;
            return k.getEspecial();
        }
    }

    private ImageIcon ajustarImagem(ImageIcon imagem) {
        imagem.setImage(imagem.getImage().getScaledInstance(93, 139, Image.SCALE_SMOOTH));
        return imagem;
    }

    private void turnoComputador() {
        computador.realizarJogada(mesa.verTopoMonte());
        imagemMonte.setIcon(ajustarImagem(mesa.verTopoMonte().getImagem()));
        imgCortada.setIcon(ajustarImagem(mesa.getMonteCarta().get(mesa.getMonteCarta().size() - 2).getImagem()));
        listaEsquerdo.clear();
        for (int i = 1; i <= computador.getMao().size(); i++) {
            listaEsquerdo.addElement("Carta " + i);
        }
    }

    public static void main(String[] args) throws IOException {
        new TelaUno().setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJogarCartaDireito;
    private javax.swing.JButton btnJogarCartaEsquerdo;
    private javax.swing.JButton btnUnoDireito;
    private javax.swing.JButton btnUnoEsquerdo;
    private javax.swing.JLabel imagemBaralho;
    private javax.swing.JLabel imagemMonte;
    private javax.swing.JLabel imgCortada;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCartas;
    private javax.swing.JLabel lblNomeJogador;
    private javax.swing.JList<String> listCartasDireito;
    private javax.swing.JList<String> listCartasEsquerdo;
    private javax.swing.JScrollPane spCartas;
    private javax.swing.JScrollPane spCartas1;
    // End of variables declaration//GEN-END:variables
}
